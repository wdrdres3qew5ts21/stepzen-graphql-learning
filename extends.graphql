
extend type Query {
  total(price:Float quantity:Int!):Float
    @rest(
      endpoint: "stepzen:empty"
      ecmascript: """
      function transformREST() {
        // mock to get price from nested level
         return get('price');
      }
      """
    )
}

extend type ProductShort {
    productDetail: [ProductsEntry]
         @materializer (
            query: "productsById", 
            arguments: {name: "productId", field: "productId"}
        )
    total:Float @materializer(
        query: "total", 
        arguments: [{name: "quantity", field: "quantity"},  {name: "price", field: "productDetail.price"}])
}

extend type CartsEntry {
    productDetailList: [ProductsEntry]
         @materializer (
            query: "productsById", 
            arguments: {name: "productId", field: "id"}
        )
}
